8,10c8,10
< 
< extern "C" {	//cs
< 
---
>  
> extern "C" {	//cs 
>  
53,56c53,56
< //int interp(fsig, cargp)
< //int fsig;
< //dptr cargp;
< static int icall(dptr procptr, dptr arglistptr, dptr result)		//cs
---
> //int interp(fsig, cargp) 
> //int fsig; 
> //dptr cargp; 
> static int icall(dptr procptr, dptr arglistptr, dptr result)		//cs 
58,67c58,67
<    register word opnd;
<    register word *rsp;
<    register dptr rargp;
<    register struct ef_marker *newefp;
<    register struct gf_marker *newgfp;
<    register word *wd;
<    register word *firstwd, *lastwd;
<    word *oldsp;
<    int type, signal, args;
< //   extern int (*optab[])();
---
>    register word opnd; 
>    register word *rsp; 
>    register dptr rargp; 
>    register struct ef_marker *newefp; 
>    register struct gf_marker *newgfp; 
>    register word *wd; 
>    register word *firstwd, *lastwd; 
>    word *oldsp; 
>    int type, signal, args; 
> //   extern int (*optab[])(); 
69,70c69,70
< //   extern int (*keytab[])();
<    extern int (*keytab[])(dptr);	//cs
---
> //   extern int (*keytab[])(); 
>    extern int (*keytab[])(dptr);	//cs 
72,74d71
< 	word savedlastop = lastop;	//cs --- so that Icon::runerr works as expected through ttrace
< 	dptr oldxargp = xargp;		//cs --- save the arguments passed to the C++ function calling Icon
< 	int oldxnargs = xnargs;		//cs --- ditto
85c82
< 
---
> 	
88,89c85,86
<    if (BlkLoc(k_current) == BlkLoc(k_main) &&
<       ((char *)sp + PerilDelta) > (char *)stackend)
---
>    if (BlkLoc(k_current) == BlkLoc(k_main) && 
>       ((char *)sp + PerilDelta) > (char *)stackend) 
127c124
<          if (gfp->gf_gentype == G_Psusp)
---
>          if (gfp->gf_gentype == G_Psusp) 
129c126
<          else
---
>          else 
132c129
<       else
---
>       else 
138c135
<       for (wd = firstwd; wd <= lastwd; wd++)
---
>       for (wd = firstwd; wd <= lastwd; wd++) 
147c144
< 	for (; ; ) {
---
>    for (; ; ) {
152c149
< 
---
>       
162c159
<          case 51:
---
>          case 51: 
171c168
<          case 90:
---
>          case 90: 
176c173
<          case 60:
---
>          case 60: 
181c178
<          case 75:
---
>          case 75: 
190c187
<          case 91:
---
>          case 91: 
195c192
<          case 77:
---
>          case 77: 
203c200
<          case 92:
---
>          case 92: 
210c207
<          case 81:
---
>          case 81: 
215c212
<          case 84:
---
>          case 84: 
223c220
<          case 93:
---
>          case 93: 
228c225
<          case 83:
---
>          case 83: 
233c230
<          case 82:
---
>          case 82: 
241c238
<          case 94:
---
>          case 94: 
248,252c245,249
<          case 4:
<          case 19:
<          case 23:
<          case 34:
<          case 37:
---
>          case 4: 
>          case 19: 
>          case 23: 
>          case 34: 
>          case 37: 
283c280
<          case 43:
---
>          case 43: 
314,315c311,312
<          case 21:
<          case 22:
---
>          case 21: 
>          case 22: 
345c342
<          case 32:
---
>          case 32: 
370c367
<          case 40:
---
>          case 40: 
392c389
<          case 2:
---
>          case 2: 
416,440c413,437
<          case 3:
<          case 5:
<          case 6:
<          case 8:
<          case 9:
<          case 16:
<          case 17:
<          case 18:
<          case 31:
<          case 42:
<          case 30:
<          case 7:
<          case 10:
<          case 11:
<          case 12:
<          case 13:
<          case 14:
<          case 15:
<          case 20:
<          case 24:
<          case 25:
<          case 26:
<          case 27:
<          case 29:
<          case 28:
---
>          case 3: 
>          case 5: 
>          case 6: 
>          case 8: 
>          case 9: 
>          case 16: 
>          case 17: 
>          case 18: 
>          case 31: 
>          case 42: 
>          case 30: 
>          case 7: 
>          case 10: 
>          case 11: 
>          case 12: 
>          case 13: 
>          case 14: 
>          case 15: 
>          case 20: 
>          case 24: 
>          case 25: 
>          case 26: 
>          case 27: 
>          case 29: 
>          case 28: 
472c469
<          case 1:
---
>          case 1: 
502c499
<          case 39:
---
>          case 39: 
533c530
<          case 38:
---
>          case 38: 
566c563
<          case 33:
---
>          case 33: 
587c584
<          case 35:
---
>          case 35: 
611c608
<          case 36:
---
>          case 36: 
644c641
<          case 41:
---
>          case 41: 
668c665
<          case 98:
---
>          case 98: 
687c684
<          case 108:
---
>          case 108: 
695c692
<          case 64:
---
>          case 64: 
714c711
<          case 44:
---
>          case 44: 
733c730
<          case 55:
---
>          case 55: 
753c750
<             union block *bp;
---
>             union block *bp; 
766,768c763,765
<                   if (BlkLoc(k_current) == BlkLoc(k_main) &&
<                      ((char *)sp + args * sizeof(struct descrip) >
<                      (char *)stackend))
---
>                   if (BlkLoc(k_current) == BlkLoc(k_main) && 
>                      ((char *)sp + args * sizeof(struct descrip) > 
>                      (char *)stackend)) 
773c770
<                   for (bp = bp->list.listhead;
---
>                   for (bp = bp->list.listhead; 
777c774
<                   bp != NULL;
---
>                   bp != NULL; 
782c779
<                         if (j >= bp->lelem.nslots)
---
>                         if (j >= bp->lelem.nslots) 
811c808
<             invokej:
---
>             invokej: 
813c810
<             int nargs;
---
>             int nargs; 
820c817
<             if (type == I_Fail)
---
>             if (type == I_Fail) 
822c819
<             if (type == I_Continue)
---
>             if (type == I_Continue) 
856c853
<                else
---
>                else 
878c875
<          case 62:
---
>          case 62: 
896c893
<          case 65:
---
>          case 65: 
913c910
<             for (i = 1; i <= opnd; i++)
---
>             for (i = 1; i <= opnd; i++) 
923c920
<          case 67:
---
>          case 67: 
932c929
<          case 96:
---
>          case 96: 
935c932
<             mark:
---
>             mark: 
944,945c941,942
<          case 85:
<             mark0:
---
>          case 85: 
>             mark0: 
956c953
<          case 78:
---
>          case 78: 
965c962
<             Unmark_uw:
---
>             Unmark_uw: 
998c995
<                if (newgfp->gf_gentype == G_Psusp)
---
>                if (newgfp->gf_gentype == G_Psusp) 
1000,1001c997,998
<                else
<                   firstwd = (word *)efp->ef_gfp +
---
>                else 
>                   firstwd = (word *)efp->ef_gfp + 
1004c1001
<             else
---
>             else 
1011c1008
<             for (wd = firstwd; wd <= lastwd; wd++)
---
>             for (wd = firstwd; wd <= lastwd; wd++) 
1019c1016
<             struct descrip sval;
---
>             struct descrip sval; 
1025c1022
< 
---
> 			
1038c1035
<                   if (newgfp->gf_gentype == G_Psusp)
---
>                   if (newgfp->gf_gentype == G_Psusp) 
1040,1041c1037,1038
<                   else
<                      firstwd = (word *)efp->ef_gfp +
---
>                   else 
>                      firstwd = (word *)efp->ef_gfp + 
1044c1041
<                else
---
>                else 
1047c1044
<                if (gfp == 0)
---
>                if (gfp == 0) 
1054c1051
<                for (wd = firstwd; wd <= lastwd; wd++)
---
>                for (wd = firstwd; wd <= lastwd; wd++) 
1070c1067
<                Lsusp_uw:
---
>                Lsusp_uw: 
1089,1090c1086,1087
<             struct descrip tmp;
<             dptr svalp;
---
>             struct descrip tmp; 
>             dptr svalp; 
1119c1116
<                if (newgfp->gf_gentype == G_Psusp)
---
>                if (newgfp->gf_gentype == G_Psusp) 
1121,1122c1118,1119
<                else
<                   firstwd = (word *)pfp->pf_gfp +
---
>                else 
>                   firstwd = (word *)pfp->pf_gfp + 
1125c1122
<             else
---
>             else 
1132c1129
<             for (wd = firstwd; wd <= lastwd; wd++)
---
>             for (wd = firstwd; wd <= lastwd; wd++) 
1175c1172
<             Eret_uw:
---
>             Eret_uw: 
1216c1213
<             Pret_uw:
---
>             Pret_uw: 
1238a1236
> 				//printf("Op_Pret caused a return to C++\n");fflush(stdout);
1242,1244d1239
< 				lastop = savedlastop;
< 				xargp = oldxargp;
< 				xnargs = oldxnargs;
1253,1254c1248,1249
<          case 53:
<             efail:
---
>          case 53: 
>             efail: 
1258c1253
<             efail_noev:
---
>             efail_noev: 
1271c1266
<                if (ipc.op == 0)
---
>                if (ipc.op == 0) 
1275c1270
<             else
---
>             else 
1280c1275
<                struct descrip tmp;
---
>                struct descrip tmp; 
1322c1317
<                   case G_Csusp:
---
>                   case G_Csusp: 
1331c1326
<                   case G_Esusp:
---
>                   case G_Esusp: 
1335c1330
<                   case G_Psusp:
---
>                   case G_Psusp: 
1352c1347
<             Pfail_uw:
---
>             Pfail_uw: 
1375c1370
<          case 45:
---
>          case 45: 
1381c1376
<          case 46:
---
>          case 46: 
1387c1382
<          case 52:
---
>          case 52: 
1394c1389
<          case 57:
---
>          case 57: 
1412c1407
<          case 58:
---
>          case 58: 
1420c1415
<          case 95:
---
>          case 95: 
1425c1420
<          case 59:
---
>          case 59: 
1432c1427
<          case 63:
---
>          case 63: 
1460c1455
<          case 69:
---
>          case 69: 
1464c1459
<          case 70:
---
>          case 70: 
1468c1463
<          case 73:
---
>          case 73: 
1473c1468
<          case 74:
---
>          case 74: 
1478c1473
<          case 76:
---
>          case 76: 
1486c1481
<          case 50:
---
>          case 50: 
1514c1509
<             struct b_coexpr *ncp;
---
>             struct b_coexpr *ncp; 
1531c1526
<             if (signal == A_Resume)
---
>             if (signal == A_Resume) 
1533c1528
<             else
---
>             else 
1572c1567
<          case 86:
---
>          case 86: 
1583c1578
<             sprintf(buf, "unimplemented opcode: %ld (0x%08x)\n",
---
>             sprintf(buf, "unimplemented opcode: %ld (0x%08x)\n", 
1590c1585
<       C_rtn_term:
---
>       C_rtn_term: 
1595c1590
<          case A_Resume:
---
>          case A_Resume: 
1601c1596
<          case A_Unmark_uw:
---
>          case A_Unmark_uw: 
1607c1602
<          case A_Lsusp_uw:
---
>          case A_Lsusp_uw: 
1613c1608
<          case A_Eret_uw:
---
>          case A_Eret_uw: 
1619c1614
<          case A_Pret_uw:
---
>          case A_Pret_uw: 
1625c1620
<          case A_Pfail_uw:
---
>          case A_Pfail_uw: 
1639c1634
<    interp_quit:
---
>    interp_quit: 
1641c1636
<    if (ilevel != 0)
---
>    if (ilevel != 0) 
