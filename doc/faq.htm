<HTML>
<HEAD>
    <TITLE>Icon Programming Language FAQ</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
</HEAD>
<BODY>
<!-- Archive-name: comp-lang-icon-faq--><IMG SRC="cube192.gif" WIDTH="192"
HEIGHT="192" ALT="" NATURALSIZEFLAG="0" ALIGN=bottom>
<H1>Frequently Asked Questions About The Icon Programming Language</H1>
Last updated February 13, 2000.<BR>
<BR>
This FAQ answers various questions about the Icon programming language,
ranging from what it is to how you can get it. The master copy of this FAQ
is the Web page <A HREF="faq.htm">http://www.cs.arizona.edu/icon/faq.htm</A>.
Other on-line documentation is available via the main Icon page at <A HREF="http://www.cs.arizona.edu/icon/">http://www.cs.arizona.edu/icon/</A>.
<BR>
<BR>
This FAQ is written by Ralph Griswold and Gregg Townsend, with help from
Cliff Hathaway, Clint Jeffery, Bob Alexander, and Todd Proebsting. 
<UL>
<LI><A HREF="#whatsicon">1. What is Icon?</A> 
<LI><A HREF="#whatgood">2. What is Icon good for?</A>
<LI><A HREF="#lineage">3. Where did Icon come from?</A>
<LI><A HREF="#onomastics">4. What does &quot;Icon&quot; stand for?</A> 
<LI><A HREF="#platforms">5. On what computers does Icon run?</A> 
<LI><A HREF="#implementors">6. Who did all these implementations?</A> 
<LI><A HREF="#otherimpls">7.  Are there other implementations in the works?</A> 
<LI><A HREF="#versions">8. What about different versions of Icon?</A> 
<LI><A HREF="#gpximpl">9.
Which implementations of Icon have graphics/window capabilities?</A> 
<LI><A HREF="#distribution">10. Where can I get Icon?</A>
<LI><A HREF="#documentation">11.  Where can I get documentation about Icon?</A> 
<LI><A HREF="#getstarted">12. How do I get
started with Icon?</A> 
<LI><A HREF="#iconproject">13. What is the Icon Project?</A>
<LI><A HREF="#examples">14.  Where can I find examples of Icon programs?</A> 
<LI><A HREF="#idol">15. What is Idol?</A> 
<LI><A HREF="#updates">16.  How often is on-line material for Icon updated?</A> 
<LI><A HREF="#news">17.  How do I stay up to date with what's going on with Icon?</A> 
<LI><A HREF="#ugroup">18. Is there a users' group for Icon?</A> 
<LI><A HREF="#techsupport">19. How do I get technical support?</A> 
<LI><A HREF="#requirements">20. What do I need to run Icon?</A> 
<LI><A HREF="#porting">21. Can I build my own implementation of Icon for a new platform?</A> 
<LI><A HREF="#proicon">22. What is ProIcon?</A> 
</UL>
<HR>
<H3><A NAME="whatsicon">1.</A> What is Icon?</H3>
Icon is a very high level general-purpose programming language with extensive
features for processing strings (text) and data structures. Icon is an imperative,
procedural language with a syntax that is reminiscent of C and Pascal, but
its semantics are at a much higher level than those languages.<BR>
<BR>
Icon has a novel expression-evaluation mechanism that integrates goal-directed
evaluation and backtracking with conventional control structures. It has
a string scanning facility for pattern matching that avoids the tedious
details usually associated with analyzing strings. Icon's built-in data
structures include sets and tables with associative lookup, lists that can
be used as vectors or stacks and queues, and records.<BR>
<BR>
Icon is a strongly, though not statically, typed language. It provides transparent
automatic type conversion. For example, if an integer is used in an operation
that requires a string, the integer is automatically converted to a string.<BR>
<BR>
Several implementations of Icon have high-level graphics facilities with
an easily programmed window interface.<BR>
<BR>
Icon manages storage automatically. Objects are created as needed during
program execution and space is reclaimed by garbage collection as needed.
The sizes of strings and data structures are limited only by the amount
of available memory. 
<H3><A NAME="whatgood">2.</A> What is Icon good for?</H3>
As a general-purpose programming language with a large computational repertoire,
Icon can be used for most programming tasks. It's at its best when used
build software tools, for processing text, and when ease of programming
is needed for experimental and research applications.<BR>
<BR>
Paradoxically, Icon is used most often for short, one-shot tasks and for
very complex applications.<BR>
<BR>
Icon is designed to make programming easy; it emphasizes the value of programmer's
time and the importance of getting programs to work quickly. This explains
its usefulness for prototyping as well as the apparent paradox of applicability
to simple and complex applications. 
<H3><A NAME="lineage">3.</A> Where did Icon come from?</H3>
Icon is the latest in a series of high-level programming languages designed
to facilitate programming tasks involving strings and structures. The original
language, SNOBOL, was developed at Bell Telephone Laboratories in the early
60s. SNOBOL evolved into SNOBOL4, which is still in use. Subsequent languages
were developed at <A HREF="http://www.cs.arizona.edu/">The University of
Arizona </A>with support from the National Science Foundation.<BR>
<BR>
Incidentally, Icon bears little physical resemblance to SNOBOL4, although
it has similar objectives and many similar capabilities. 
<H3><A NAME="onomastics">4.</A> What does &quot;Icon&quot;
stand for?</H3>
The name Icon (which is not spelled ICON) is not an acronym nor does it
stand for anything in particular, although the word &quot;iconoclastic&quot;
was mentioned at the time the name was chosen. The name predates the now
common use of &quot;icon&quot; to refer to small images used in graphical
user interfaces. This latter usage sometimes causes persons to think mistakenly
that Icon is designed to create or manipulate icons. There's not much that
can be done about this. 
<H3><A NAME="platforms">5.</A> On what computers does
Icon run?</H3>
The latest version, 9, runs on UNIX, MS-DOS,
Windows 3.1, Windows 95, Windows NT, Macintosh/MPW, VAX/VMS, the Amiga,
and the Acorn Archimedes.  There are older versions
for the Atari ST, IBM CMS and MVS, the Macintosh, and OS/2.<BR>
<BR>
Icon programs are highly portable. Most Icon programs can run on any
platform that supports Icon. An exception is programs that use Icon's
graphics facilities, which are not available on all platforms and vary
somewhat among the platforms for which they are implemented.<BR>
<BR>
<A HREF="http://www.cs.arizona.edu/icon/jcon/">Jcon</A> is a new Java-based
implementation of the Icon programming language.  The Jcon translator, written
in Icon, generates Java class files that execute in conjunction with a run-time
system written in Java.  Jcon is an essentially complete implementation of
Icon, including graphics and large integers.  A few minor features are
missing -- mostly things like <code>chdir()</code> that cannot be done in
Java.  Jcon-derived programs are not as fast as those using the standard Icon
intepreter.<BR>
<BR>
<H3><A NAME="implementors">6.</A> Who did all these
implementations?</H3>
The original implementation of Icon for UNIX was done at <A HREF="http://www.cs.arizona.edu/">The
University of Arizona. </A>Most of the other implementations originally
were done by volunteers scattered around the world.
It's worth noting that all implementations of Icon are based on the same
source code, which is written in C. This contributes to the portability
of Icon itself, as well as to the portability of programs written in Icon.<BR>
<BR>
The implementation of
<A HREF="http://www.cs.arizona.edu/icon/jcon/">Jcon</A> was done at
<A HREF="http://www.cs.arizona.edu/">The University of Arizona</A> by
<A HREF="http://research.microsoft.com/~toddpro/">Todd Proebsting</A> and
<A HREF="http://www.cs.arizona.edu/people/gmt/">Gregg Townsend</A>, with
contributions from Denise Todd and Bob Alexander.<BR>
<BR>
<H3><A NAME="otherimpls">7.</A> Are there
other implementations in the works?</H3>
At the present time, Icon runs on most generally available platforms.
Consequently implementation work currently is focused on improvements.
When a new computer or operating system becomes popular, new Icon
implementations typically follow.
<H3><A NAME="versions">8.</A> What about different
versions of Icon?</H3>
Icon has evolved through a series of versions with improved and extended
capabilities. The latest major version number is 9. This version includes
recent changes and additions, notably in the graphics area, and runs on
UNIX, MS-DOS, Macintosh/MPW, VAX/VMS, the Amiga, and Acorn Archimedes.
Other implementations presently are at Version 8. Almost all programs that run
under Version 8
and that do not use graphics will run under Version 9. 
<H3><A NAME="gpximpl">9.</A>
Which implementations of Icon have graphics/window capabilities?</H3>
Icon's graphics facilities presently are supported on UNIX, VAX/VMS,
Windows 3.1 (with Win32s), Windows 95, and Windows NT.
<H3><A NAME="distribution">10.</A> Where can I get Icon?</H3>
Icon is available via anonymous FTP and on the Web. For FTP, use 
<BLOCKQUOTE><A HREF="ftp://ftp.cs.arizona.edu/icon/">ftp.cs.arizona.edu</A>
</BLOCKQUOTE>
and <CODE>cd /icon</CODE>.<BR>
<BR>
For the Web, use 
<BLOCKQUOTE><A HREF="http://www.cs.arizona.edu/icon/">http://www.cs.arizona.edu/icon/</A>
</BLOCKQUOTE>
and check out the links there.<BR>
<BR>
For FTP, the directory <A HREF="ftp://ftp.cs.arizona.edu/icon/binaries/">/icon/binaries</A>
contains executable versions of Icon for several systems, including several
popular UNIX platforms. The directory <A HREF="ftp://ftp.cs.arizona.edu/icon/packages/">/icon/packages</A>
contains source code, test programs, related material, and, most cases,
executable binaries as well. All directories have <CODE>README</CODE> files
with additional information.<BR>
<BR>
<H3><A NAME="documentation">11.</A> Where can
I get documentation about Icon?</H3>
The definitive work on Icon is the book 
<BLOCKQUOTE>The Icon Programming Language, Griswold and Griswold, third
edition, Peer-to-Peer Communications, Inc, 1996, 386 pages, ISBN 1-57398-001-3.
</BLOCKQUOTE>
This book is a complete description and reference manual for Version 9 of
Icon. A technical report describes changes since that version.<BR>
<BR>
There also is a book on the implementation of Icon: 
<BLOCKQUOTE>The Implementation of the Icon Programming Language, Griswold
and Griswold, Princeton University Press, 1986, 336 pages, ISBN 0-691-08431-9.
</BLOCKQUOTE>
This book describes the implementation as of Version 6 of Icon. Although
the implementation has changed considerably since then, the basic structure
is the same. Technical reports describing recent implementation changes
are included with copies of the book purchased from the Icon Project.<BR>
<BR>
These books are available from the <A HREF="orderi.htm">Icon Project</A>.<BR>
<BR>
Additional documentation is available via the web.
Notable documents are: 
<UL>
<LI>IPD266: An Overview of Icon (<A HREF="docs/ipd266.htm">HTML</A>,
<A HREF="ftp/doc/ipd266.txt">text</A>,
<A HREF="ftp/doc/ipd266.zip">PostScript</A>, <A HREF="ftp/doc/ipd266.pdf">PDF</A>)
<LI>IPD281: Graphics facilities
(<A HREF="docs/ipd281.htm">HTML</A>,
<A HREF="ftp/doc/ipd281.zip">PostScript</A>,
<A HREF="ftp/doc/ipd281.pdf">PDF</A>) 
<LI>IPD278: Version 9.3 of Icon
(<A HREF="docs/ipd278.htm">HTML</A>,
<A HREF="ftp/doc/ipd278.txt">text</A>,
<A HREF="ftp/doc/ipd278.zip">PostScript</A>, <A HREF="ftp/doc/ipd278.pdf">PDF</A>)
</UL>
The <A HREF="index.htm">Icon web page</A> points to additional documentation,
but there is no complete on-line documentation.<BR>
<BR>
The <A HREF="inl/inl.htm">Icon Newsletter</A>, which includes topical
material about Icon
is published three times a year and is available on the Web.
The <A HREF="analyst/ia.htm">Icon
Analyst</A>, a technically-oriented newsletter that features articles about
programming, is published six times a year. There is a subscription fee
for the Analyst. A <A HREF="analyst/sample.htm">sample copy</A> is available
on the Web. Communications about the Analyst should be addressed to
icon-analyst@cs.arizona.edu.<BR>
<BR>
All back issues of both newsletters are available for purchase. 
<H3><A NAME="getstarted">12.</A> How do I get started with Icon?</H3>
If you're running under UNIX, check the web page at
<A HREF=v93u.htm>http://www.cs.arizona.edu/icon/v93u.htm</A>
to see if there is a &quot;starter kit&quot; for your platform.
Starter kits include executables, documentation, and other material.<BR>
<BR>
Otherwise, go to
<A HREF="ftp/packages/">ftp://ftp.cs.arizona.edu/icon/packages</A>
and get the appropriate package. Packages include documentation
and other material; see the <CODE>README</CODE> file in that directory for
more details. There is a UNIX package for platforms that lack starter kits.<BR>
<BR>
If the non-UNIX package you pick up does not contain executable files, check
<A HREF="ftp/binaries/">ftp://ftp.cs.arizona.edu/icon/binaries/</A>. 
You also may want to get the overview of Icon noted in the previous answer.
You'll find pointers to other documents of interest in the package you pick
up. 
<H3><A NAME="iconproject">13.</A> What is the Icon Project?</H3>
The Icon Project is a name used by the group that develops, implements,
distributes, and supports the Icon programming language.<BR>
<BR>
The Icon Project is not commercial organization. It derives support from
The University of Arizona, revenue from the sale of books and subscriptions,
as well as user contributions. 
<H3><A NAME="examples">14.</A> Where can I find examples of Icon programs?</H3>
There is a large program library for Icon. It is an excellent resource for
both new and experienced programmers. The library contains numerous examples
of how to do things with Icon. The library also provides many useful applications,
as well as hundreds of procedures that supplement Icon's built-in repertoire.<BR>
<BR>
The library, like other Icon material, is available on-line.
<BR><BR>
User contributions to the library are welcome. Send e-mail to
icon-ipl@cs.arizona.edu.
<H3><A NAME="idol">15.</A> What is Idol?</H3>
Idol is an object-oriented extension to Icon that provides concepts such
as classes and multiple inheritance. Idol is written in Idol and is distributed
as part of the Icon program library. Idol runs on almost all of the platforms
that support Icon.<BR>
<BR>
Additional Idol information is available from Clint Jeffery, 
<BLOCKQUOTE><A HREF="mailto:jeffery@cs.unlv.edu">jeffery@cs.unlv.edu</A>.
</BLOCKQUOTE>
<H3><A NAME="updates">16.</A>
How often is on-line material for Icon updated?</H3>
New material is added when it's available. Established implementations usually
are updated only when there's a new version. This typically is every
year or two. The Icon program library is updated on a similar schedule.
<H3><A NAME="news">17.</A>
How do I stay up to date with what's going on with Icon?</H3>
The best way to find out about developments related to Icon is to read the
<A HREF="inl/inl.htm">Icon Newsletter</A>.<BR>
<H3><A NAME="ugroup">18.</A> Is there a users' group for Icon?</H3>
There is no official Icon users' group. The Icon Project maintains a 
moderated electronic mailing list, 
<BLOCKQUOTE><A HREF="mailto:icon-group@cs.arizona.edu">icon-group@cs.arizona.edu</A>.
</BLOCKQUOTE>
Mail sent to this address is forwarded to subscribers. To subscribe (or
unsubscribe), send a message to 
<BLOCKQUOTE><A HREF="mailto:icon-group-request@cs.arizona.edu">icon-group-request@cs.arizona.edu</A>.
</BLOCKQUOTE>
There is a gateway between icon-group and <A HREF="news:comp.lang.icon">comp.lang.icon</A>,
an unmoderated newsgroup for discussing issues related to Icon. The gateway,
which exchanges messages between the two systems, is imperfect and not under
the control of the Icon Project.<BR>
<BR>
The newsgroup generally provides faster response than the mailing list and
is less intrusive, but it sometimes suffers from inappropriate postings. The
Icon Project usually sends messages of interest to the Icon community to
icon-group. 
<H3><A NAME="techsupport">19.</A> How do I get technical support?</H3>
The Icon Project is not a commercial organization, and its capacity for
providing technical support is limited. Please use the appropriate resource
when you need assistance: 
<H4>Ordering Icon Material</H4>
<PRE>mail:   Icon Project
        Department of Computer Science
        The University of Arizona
        P.O. Box 210077
        Tucson, Arizona 85721-0077
        U.S.A.

fax:    (520) 621-4246
voice:  (520) 621-6613
e-mail: <A HREF="mailto:icon-orders@cs.arizona.edu">icon-orders@cs.arizona.edu</A></PRE>
<H4>Getting On-Line Information and Material</H4>
<PRE>web:    <A HREF="http://www.cs.arizona.edu/icon/">http://www.cs.arizona.edu/icon/</A>
ftp:    <A HREF="ftp://ftp.cs.arizona.edu/icon/">ftp.cs.arizona.edu</A> (cd /icon)
e-mail: <A HREF="mailto:ftpmail@cs.arizona.edu">ftpmail@cs.arizona.edu</A></PRE>
Send a message consisting of the word help. 
<H4>Assistance with Installing Icon</H4>
<PRE>e-mail: <A HREF="mailto:icon-project@cs.arizona.edu">icon-project@cs.arizona.edu</A></PRE>
<H4>Bug Reports</H4>
<PRE>e-mail: <A HREF="mailto:icon-project@cs.arizona.edu">icon-project@cs.arizona.edu</A>
fax:    (520) 621-4246</PRE>
<H4>Assistance with Programming Problems</H4>
<PRE>e-mail: <A HREF="mailto:icon-group@cs.arizona.edu">icon-group@cs.arizona.edu</A>
news:   <A HREF="news:comp.lang.icon">comp.lang.icon</A></PRE>
<H4>Uploading Files</H4>
<PRE>ftp:    <A HREF="ftp://ftp.cs.arizona.edu/incoming/">ftp.cs.arizona.edu</A> (cd /incoming)</PRE>
After uploading, send e-mail to <A HREF="mailto:icon-project@cs.arizona.edu">icon-project@cs.arizona.edu</A>.
<H3><A NAME="requirements">20.</A> What do I need to run Icon?</H3>
Icon will run on most modern platforms with standard configurations. Some
programs may require more than the nominal amount of RAM.
<H3><A NAME="porting">21.</A>
Can I build my own implementation of Icon for a new platform?</H3>
As mentioned above, Icon is written in C and the source code is available.
The existing implementations are testaments to its portability. (A small
amount of assembly-language code is required for a context switch, but this
is only needed for an optional feature -- co-expressions -- that can be
disabled without affecting other features of Icon.)<BR>
<BR>
New ports involve platform-specific configuration parameters and, in some
cases, platform-specific code. The feasibility of a new port and the amount
of work it may take depends on the platform -- its architecture, its C compiler,
and its environment.<BR>
<BR>
Ports to new UNIX platforms generally are easy, although novel architectures
may present problems. Ports to new operating systems generally are more
difficult, especially if Icon's graphics facilities are implemented.<BR>
<BR>
The Icon Project provides what help it can with new ports. In return, it
expects that code related to the port to be returned to the Icon Project for
inclusion in future versions of the source code for Icon. This makes the
new port available to others as well as to the porter when Icon is updated.<BR>
<BR>
Porting the <A HREF="http://www.cs.arizona.edu/icon/jcon/">Jcon</A> system
is another way to build an Icon system on a new platform.  The Jcon
translator is written in Icon and the runtime system is written in Java, which
means that neither C nor assembly language is required for a port.  Jcon's
compiler-driver is a 400-line Korn shell script, which works well for Unix
but may be an impediment to a non-Unix port.
<BR>
<H3><A NAME="proicon">22.</A> What is ProIcon?</H3>
ProIcon is an implementation of Version 8 of Icon for the Macintosh. It has
a standard Macintosh interface, an integerated editor, and several extensions
of standard Icon.<BR>
<BR>
ProIcon originally was a commerical product. After it was discontinued, it
was placed in the public domain. The source code, however, is not available,
because it contains proprietary and licensed components.<BR>
<BR>
ProIcon will not be upgraded.
<BR><BR>
<HR><A HREF="index.htm">Icon home page</A> 
</BODY>
</HTML>
