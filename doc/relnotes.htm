<!doctype html public "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
    <TITLE>Release Notes for Version 9.4.1 of Icon</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
</HEAD>
<BODY>

<A HREF="http://www.cs.arizona.edu/icon/"> <IMG SRC="wwwcube.gif"
ALT="[Icon home]" WIDTH=128 HEIGHT=144 BORDER=0 ALIGN=RIGHT> </A>

<H1> Release Notes for Version 9.4.1 of Icon </H1>

<P> Gregg M. Townsend
<BR> <SMALL> Department of Computer Science </SMALL>
<BR> <SMALL> The University of Arizona </SMALL>

<P> <SMALL> www.cs.arizona.edu/icon/v941/relnotes.htm
<BR> Last updated January 30, 2002 </SMALL>
<!-- $Id$ -->


<H2> Introduction </H2>

<P> Version 9.4.1 of Icon is a minor update to version 9.4.0 of Icon. 
Most changes address installation and portability issues.
The performance of large sets and tables is improved,
and some minor bugs have been fixed.
The one new feature is a command that allows
an Icon source program to be used as an executable script.

<P> The Icon language is unchanged, and this Unix implementation
remains compatible at the source level with Icon 9.3 for Windows.


<H2> Recent feature additions </H2>

New features added since the publication of the Icon books
are described below.

<H3> Scriptable Source Files </H3>
<SMALL> (new with Version 9.4.1 of Icon) </SMALL>

<P> An Icon source file can be made executable under Unix by prefixing it
with a comment line
<BLOCKQUOTE><CODE>#!/usr/bin/env icon</CODE></BLOCKQUOTE>
and setting its execute permission bit.
This uses a new <A HREF="icon.txt"><CODE>icon</CODE></A> command,
which in another form allows a small Icon program to be embedded
within a shell script.
See the new <A HREF="icon.txt">man page</A> for details.
The traditional <A HREF="icont.txt"><CODE>icont</CODE></A> command
remains available for less specialized purposes.

<H3> Path searching </H3>
<SMALL> (new with Version 9.4.0 of Icon) </SMALL>

<P> Under Unix, colons (<CODE>:</CODE>) may now separate directories in the
<CODE>LPATH</CODE> and <CODE>IPATH</CODE> environment variables as an
alternative to spaces.
The Icon translator and linker search these paths when looking for
<CODE>$include</CODE> and <CODE>link</CODE> files respectively.

<P> The Icon program library is now searched automatically, but
<CODE>LPATH</CODE> and <CODE>IPATH</CODE> can still be set to control
the search order.
For version 9.4, the effective path in each case is:
<OL>
	<LI> the current directory
	<LI> any directories named by the environment variable
	<LI> the Icon library directory
</OL>

<P> Other changes affect the configuration of Icon at installation time
and the way executable Icon programs locate the interpreter.
These changes, which are transparent to most users, are discussed
in more detail on the <A HREF="files.htm">File Organization</A> page.

<H3> Reading directory contents </H3>
<SMALL> (new with Version 9.3.2 of Icon) </SMALL>

<P> The files in a directory can be listed by opening the directory as a file.
Subsequent reads return the names of the files contained in the directory.
The names are returned in no particular order, and for Unix, the directories 
<CODE>"."</CODE> and <CODE>".."</CODE> are included.

<H3> Reading foreign text files </H3> 
<SMALL> (new with Version 9.3.1 of Icon) </SMALL>

<P> The function <CODE>read()</CODE> recognizes
three kinds of line terminators when reading a file
opened in translated mode:
Windows (CR+LF), Macintosh (CR), or Unix (LF).
Consequently, text files created on one platform can be
read by an Icon program running on a different platform. 

<H2> Other Changes in Version 9.4.1 </H2>

<P> Notable changes in this latest version are listed here.
Some code cleanup work and documentation editing
has also been done.

<H3> Huge sets and tables </H3>

<P> The access time of a set or table is constant
as long as the structure does not grow too big.
Prior to this release, sets and tables began slowing down
after growing beyond 20,000 elements.
With this version, the limit has been raised to around
44 million elements, making much larger sets and tables
feasible.

<H3> Automatic hardware configuration </H3>

<P> The configuration parameters <CODE>IntBits</CODE>, <CODE>WordBits</CODE>,
<CODE>Double</CODE>, and <CODE>UpStack</CODE> are now configured automatically.
This allows the same <CODE>linux</CODE> configuration to be used 
on x86, Itanium, and Alpha architectures, and presumably on others.
The set of configurations has been consolidated, and some
obsolete configurations removed.

<H3> Pthreads configurations </H3>

<P> Co-expression support requires specialized code for context switching
that until now has been hardware-dependent.
A new, portable set of context switching functions has been developed
using POSIX threads and semaphores.
The new functions have been tested under
Linux, FreeBSD, Solaris, Irix, and Digital Unix,
and on several hardware architectures including the Intel Itanium.

<P> These pthreads configurations are more sensitive than others
to the accumulation of uncollected co-expressions under heavy usage.
Consequently, they are not used by default when platform-specific
code is available.

<H3> Library Changes </H3>

<P> As usual, several files in the Icon program library
have been added, edited, or moved.
No significant changes were made to the core files.
The most notable addition is a nice double-deck solitaire game,
<CODE>gprogs/spider.icn</CODE>, contributed by Will Evans.

<H3> Minor changes </H3>

<UL>

<LI> Added <CODE>icont -P</CODE> to print the Icon version
and configuration.

<LI> Edited Makefiles and shell scripts to work even in a non-POSIX locale.

<LI> Altered getopt() calls to allow use of GNU getopt.

<LI> Fixed icont to not reject an <CODE>invocable</CODE> identifier
having a numeric second character.

<LI> Enlarged the test suite by incorporating tests from 
<A HREF="http://www.cs.arizona.edu/icon/jcon/">Jcon</A>.

</UL>

<H2> Other Documentation </H2>

<P> See the <A HREF=docguide.htm>documentation guide</A>
for an overview of the available Icon documentation.

<P> For installation instructions, see
<A HREF=install.htm>Installing Binaries</A> or
<A HREF=build.htm>Building from Source</A> as appropriate.

<P> <HR>

</BODY>
</HTML>
