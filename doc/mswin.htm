<!doctype html public "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
    <TITLE>Icon on Microsoft Windows</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
</HEAD>
<BODY>

<P><A HREF="http://www.cs.arizona.edu/icon/"> <IMG SRC="wwwcube.gif"
ALT="[Icon home]" WIDTH=128 HEIGHT=144 BORDER=0 ALIGN=RIGHT> </A>

<H1> Icon on Microsoft Windows </H1>

<P> Gregg M. Townsend
<BR> <SMALL> Department of Computer Science </SMALL>
<BR> <SMALL> The University of Arizona </SMALL>

<P> <SMALL> www.cs.arizona.edu/icon/v941/mswin.htm
<BR> Last updated December 19, 2002 </SMALL>
<!-- $Id$ -->


<H2> Introduction </H2>

<P> Most contemporary operating systems trace their underlying design
to the Unix operating system,
as refined and specified today by the POSIX family of standards.
Microsoft Windows, however, was developed independently and
provides a different set of interfaces to the programmer and the user.
As a consequence, the implementation of Icon for Windows
differs significantly from others.

<P> This document describes some of the peculiarities of the Windows
port of Version 9.4 of Icon.
These differences are not necessarily identified in other documentation.


<H2> Building Icon </H2>

<P> Icon for Windows is built using the
<A HREF="http://www.cygwin.com/">Cygwin</A> Unix environment.
This software supplies the POSIX interfaces that Icon requires.
A custom installation of the Cygwin system is required;
the default installation provides a bare-bones system
insufficient for building software.
Icon requires a C compiler and the usual tools and utilities
available on a standard POSIX development system.

<P> Icon is built in a Cygwin shell window.
The process is the same as on other platforms
and uses the configuration named <CODE>intel_cygwin</CODE>.
See the <A HREF=build.htm>installation documentation</A> for details.


<H2> Running Icon programs </H2>

<P> Icon is run by commands entered in a terminal window.
The simplest of these is "<CODE>icon foo.icn</CODE>",
which runs the program contained in the source file <CODE>foo.icn</CODE>.
The translator <CODE>icont</CODE> can create executable programs
from Icon source code.
The Unix-style "man pages" for <A HREF=icon.txt><CODE>icon</CODE></A>
and <A HREF=icont.txt><CODE>icont</CODE></A>
describe the command options in a traditionally cryptic manner.

<P> Once an Icon program has been built, it can be executed
either through typed commands or by double-clicking its icon.
If a program is run by double-clicking, windows are opened
as necessary if standard input, output, or error files are used
by the program.


<H2> Interpreter path </H2>

<P> Icon programs require an interpreter for execution.
On Windows, the path of the interpreter is not embedded
in an executable program.
The program must be able to find
<CODE>iconx.exe</CODE> in one of these locations:
<UL>
    <LI> in the file named by the <CODE>ICONX</CODE> environment variable
    <LI> in the same directory as the executable program
    <LI> in the search path
</UL>

<P> To distribute an Icon program in executable form, include
<CODE>iconx.exe</CODE> in the same directory as the executable program.


<H2> Extra built-in functions </H2>

<P> For compatibility with earlier ports of Icon to Windows,
this implementation includes some extra built-in functions.
The functions are described in section 6.2 of
<A HREF="http://www.cs.arizona.edu/icon/docs/ipd271.htm">IPD271</A>.

<P> These functions are not part of Icon on other platforms
and so their use renders a program non-portable.


<H2> No dynamic loading </H2>

The dynamic loading interface &mdash; <CODE>loadfunc()</CODE> &mdash; 
is not implemented.


<H2> Stability </H2>

<P> The bulk of the Icon translator and run-time system
is common to all ports of Icon is quite stable and robust.
A few sections of code involving file access and path searching
are specific to Windows.

<P> Much of the graphics subsystem code is unique to Windows.
This code is in uncertain shape and is not well tested.


<H2> Known bugs </H2>

<UL>
    <LI> Resizing a window sends a large number of events.
</UL>


<P> <HR>

</BODY>
</HTML>
