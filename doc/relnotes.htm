<!doctype html public "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
    <TITLE>Release Notes for Version 9.4.2 of Icon</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
</HEAD>
<BODY>

<P><A HREF="http://www.cs.arizona.edu/icon/"> <IMG SRC="wwwcube.gif"
ALT="[Icon home]" WIDTH=128 HEIGHT=144 BORDER=0 ALIGN=RIGHT> </A>

<H1> Release Notes for Version 9.4.2 of Icon </H1>

<P> Gregg M. Townsend
<BR> <SMALL> Department of Computer Science </SMALL>
<BR> <SMALL> The University of Arizona </SMALL>

<P> <SMALL> www.cs.arizona.edu/icon/v942/relnotes.htm
<BR> Last updated April 9, 2003 </SMALL>
<!-- $Id$ -->


<H2> Introduction </H2>

<P> Version 9.4.2 of Icon is a minor update to version 9.4.1 of Icon. 
The 256-color graphics limit has been removed,
and a configuration for Cygwin (on Windows) has been added.
Some minor bugs have been fixed.

<P> The Icon language is unchanged, and this Unix implementation
remains compatible at the source level with Icon 9.3 for Windows.


<H2> Changes in version 9.4.2 </H2>

<P> Notable changes in this latest version are listed here.
Some code cleanup work and documentation editing
has also been done.

<H3> 256-color limit removed </H3>

<P> Icon's X-windows interface previously limited each window
to 256 colors at one time.
This limitation has been removed for the TrueColor displays
provided by most modern computers.
Median-cut quantization is used to select 256 image colors
when <CODE>WriteImage()</CODE> is called to write a GIF file.

<H3> Cygwin configuration </H3>

<P> A new configuration allows Icon to be built on the
<A HREF="http://www.cygwin.com/">Cygwin</A> Unix environment for
Microsoft Windows.
For more details see 
<A HREF=cygwin.htm>Icon on Cygwin</A>.


<H3> Library changes </H3>

<P> As usual, several files in the Icon program library have been
added or edited.  The core library files, however, remain stable.

<P>
Many changes were made to the pattern and weaving packages.
Other notable changes include:

<PRE>
procs/cartog		add sbsize() for creating scale bars
procs/pscript		add psprotect() for escaping PostScript strings
procs/lists		add lst2str() to convert list to string
procs/pdco		add an "undulant" PDCO
procs/random		use /dev/random, if available, in randomize()
procs/records		add "move corresponding" procedure mvcorr(R1, R2)
procs/seqops		add sconcatp() and splacep()
procs/string		add procedures for finding common prefix or suffix

gprocs/mapnav		repackage the map navigation GUI from gprogs/dlgvu 
gprocs/vtext		don't let PgUp etc. insert garbage in text fields

progs/htget		send Host: spec for use with multi-domain servers
progs/shuffle		new utility for reordering lines of a file

gprogs/dlgvu		read labels; write locations; add PostScript scalebar
gprogs/gallery		better coloring, more formats, snapshot command
gprogs/histo		save histogram image to a GIF file
gprogs/trkvu		new program for viewing GPS track logs

cfuncs/ilists.c		new support code for array access by loadable functions
</PRE>



<H3> Minor changes </H3>

<UL>

   <LI> The command "<CODE>icon &ndash; [<VAR>args</VAR>]</CODE>"
   	can now be used to execute a source program read from standard input.

   <LI> A new "<CODE>icont &ndash;N</CODE>" flag suppresses
   	embedding of an <CODE>iconx</CODE> path in the generated executable

   <LI> The configuration directory has been restructured.

   <LI> Several obsolete configurations have been removed.

   <LI> The environment variables <CODE>HEAPSIZE</CODE> and
   	<CODE>BLOCKSIZE</CODE> no longer function as
	undocumented alternatives to <CODE>BLKSIZE</CODE>.
	The GNU <CODE>ls</CODE> utility uses <CODE>BLOCKSIZE</CODE>
	for other purposes, leading to confusion.

   <LI> "<CODE>make Install</CODE>" has been changed to never delete anything.
   	It now creates a new directory rather than altering an existing one.

</UL>


<H2> Other recent feature additions </H2>

<P> New features added since the publication of the Icon books
are described below.

<H3> Scriptable source files </H3>
<SMALL> (new with version 9.4.1 of Icon) </SMALL>

<P> An Icon source file can be made executable under Unix by prefixing it
with a comment line
<BLOCKQUOTE><CODE>#!/usr/bin/env icon</CODE></BLOCKQUOTE>
and setting its execute permission bit.
This uses a new <A HREF="icon.txt"><CODE>icon</CODE></A> command,
which in another form allows a small Icon program to be embedded
within a shell script.
See the <A HREF="icon.txt">man page</A> for details.
The traditional <A HREF="icont.txt"><CODE>icont</CODE></A> command
remains available for less specialized purposes.

<H3> Path searching </H3>
<SMALL> (new with version 9.4.0 of Icon) </SMALL>

<P> Under Unix, colons (<CODE>:</CODE>) may now separate directories in the
<CODE>LPATH</CODE> and <CODE>IPATH</CODE> environment variables as an
alternative to spaces.
The Icon translator and linker search these paths when looking for
<CODE>$include</CODE> and <CODE>link</CODE> files respectively.

<P> The Icon program library is now searched automatically, but
<CODE>LPATH</CODE> and <CODE>IPATH</CODE> can still be set to control
the search order.
For version 9.4, the effective path in each case is:
<OL>
	<LI> The current directory
	<LI> Any directories named by the environment variable
	<LI> The Icon library directory
</OL>

<P> Other changes affect the configuration of Icon at installation time
and the way executable Icon programs locate the interpreter.
These changes, which are transparent to most users, are discussed
in more detail on the <A HREF="files.htm">File Organization</A> page.

<H3> Reading directory contents </H3>
<SMALL> (new with version 9.3.2 of Icon) </SMALL>

<P> The files in a directory can be listed by opening the directory as a file.
Subsequent reads return the names of the files contained in the directory.
The names are returned in no particular order, and for Unix, the directories 
<CODE>"."</CODE> and <CODE>".."</CODE> are included.

<H3> Reading foreign text files </H3> 
<SMALL> (new with version 9.3.1 of Icon) </SMALL>

<P> The function <CODE>read()</CODE> recognizes
three kinds of line terminators when reading a file
opened in translated mode:
Windows (CR+LF), Macintosh (CR), or Unix (LF).
Consequently, text files created on one platform can be
read by an Icon program running on a different platform. 


<H2> Limitations, bugs, and problems </H2>

<P> Large integers cannot be used with <CODE>i to j</CODE>,
with <CODE>seq()</CODE>, or with integer-valued keywords.

<P> Large-integer literals are constructed at run-time, so such
literals are best kept outside of loops.

<P> Conversion of a large integer to a string is quadratic
in the length of the integer.
Conversion of a very large integer may take a long time.

<P> Stack overflow checking uses a heuristic that is not always effective.
Stack overflow in a co-expression is especially likely to escape
detection and cause a mysterious program malfunction. 

<P> Pathologically nested structures can provoke a memory or segmentation
fault during garbage collection because of stack overflow.
The stack limit can be raised by the 
<CODE>limit</CODE> or <CODE>ulimit</CODE> shell command.


<P> If an expression such as 
    <CODE> x := create <VAR>expr</VAR></CODE>
is used in a loop, and <CODE>x</CODE> is not a global variable,
uncollectable co-expressions accumulate with each iteration.
This problem can be circumvented by making <CODE>x</CODE>
a global variable or by assigning a value to <CODE>x</CODE>
before the create operation, as in 
    <BLOCKQUOTE><CODE>
	x := &amp;null <BR>
	x := create <VAR>expr</VAR>
    </CODE></BLOCKQUOTE>

<P> Integer overflow on exponentiation may not be detected during execution.
Such overflow may occur during type conversion.


<H2> Documentation </H2>

<P> See the <A HREF=docguide.htm>documentation guide</A>
for an overview of the available Icon documentation.

<P> For installation instructions, see
<A HREF=install.htm>Installing Binaries</A> or
<A HREF=build.htm>Building from Source</A> as appropriate.


<H2> Acknowledgments </H2>

<P>
Frank Lhota contributed the Cygwin port.
Ralph Griswold contributed a large number of program library changes.
Frank Glandorf contributed <CODE>dlgvu</CODE> modifications.
Kostas Oikonomou contributed the array support code.
Christian Hudon helped with testing.

<P> <HR>

</BODY>
</HTML>
