<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
    <TITLE>Icon Programming Language Operations (infix 1)</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
    <LINK REL="SHORTCUT ICON" HREF="shortcut.gif">
</HEAD><BODY>
<H2>Details of Icon Infix Operations (part 1)</H2>
<HR>
<H3><A NAME = "sum">
N1 + N2 : N3 -- compute sum
</A></H3>

N1 + N2 produces the sum of N1 and N2.
<PRE>
See also: <A HREF = "prefix.htm#positive">+N</A>
</PRE>
<HR>
<H3><A NAME = "difference">
N1 - N2 : N3 -- compute difference
</A></H3>

N1 - N2 produces the difference of N1 and N2.
<PRE>
See also: <A HREF = "prefix.htm#negative">-N</A>
</PRE>
<HR>
<H3><A NAME = "product">
N1 * N2 : N3 -- compute product
</A></H3>

N1 * N2 produces the product of N1 and N2.
<PRE>
See also: <A HREF = "prefix.htm#size">*N</A>
</PRE>
<HR>
<H3><A NAME = "quotient">
N1 / N2 : N3 -- compute quotient
</A></H3>

N1 / N2 produces the quotient of N1 and N2.
<PRE>
See also: <A HREF = "prefix.htm#null">/x</A>
</PRE>
<HR>
<H3><A NAME = "remainder">
N1 % N2 : N3 -- compute remainder
</A></H3>

N1 % N2 produces the remainder of N1 divided by N2.  The sign of the result is
the sign of N1.
<HR>
<H3><A NAME = "exponential">
N1 ^ N2 : N3 -- compute exponential
</A></H3>

N1 ^ N2 produces N1 raised to the power N2.
<PRE>
See also: <A HREF = "prefix.htm#refresh">^N</A>, <A HREF = "funcej.htm#exp">exp()</A>, and <A HREF = "funcsz.htm#sqrt">sqrt()</A>,
</PRE>
<HR>
<H3><A NAME = "union">
x1 ++ x2 : x3 -- compute cset or set union
</A></H3>

x1 ++ x2 produces the cset or set union of x1 and x2.
<HR>
<H3><A NAME = "set_difference">
x1 -- x2 : x3 -- compute cset or set difference
</A></H3>

x1 -- x2 produces the cset or set difference of x1 and x2.
<HR>
<H3><A NAME = "intersection">
x1 ** x2 : x3 -- compute cset or set intersection
</A></H3>

x1 ** x2 produces the cset or set intersection of x1 and x2.
<HR>
<H3><A NAME = "concatenation">
s1 || s2 : s3 -- concatenate strings
</A></H3>

s1 || s2 produces a string consisting of s1 followed by s2.
<PRE>
See also: <A HREF = "#list_concatenation">L1 ||| L2</A>
</PRE>
<HR>
<H3><A NAME = "list_concatenation">
L1 ||| L2 : L3 -- concatenate lists
</A></H3>

L1 ||| L2 produces a list consisting of the values in L1 followed by
the values in L2.
<PRE>
See also: <A HREF = "#concatenation">s1 || s2</A>
</PRE>
<HR>
<H3><A NAME = "field">
R.f : x -- get field of record
</A></H3>

R.f produces a variable for the f field of record R.
<PRE>
See also: <A HREF = "prefix.htm#dereference">.x</A>
</PRE>
<HR>
<H3><A NAME = "transmit">
x1 @ C : x2 -- transmit value to co-expression
</A></H3>

x1 @ C activates C, transmitting the value of x1 to it; it produces the
outcome of activating C.
<PRE>
See also: <A HREF = "prefix.htm#activate">@C</A>
</PRE>
<HR>
<H3><A NAME = "conjunction">
x1 &amp; x2 : x2 -- evaluate in conjunction
</A></H3>

x1 &amp; x2 produces x2.  It produces a variable if x2 is a variable.
<HR>
<H3><A NAME = "num_gt">
N1 &gt; N2 : N2 -- compare numerically
</A></H3>

N1 &gt; N2 produces N2 if N1 is numerically greater than N2, but fails otherwise.
<PRE>
See also: <A HREF = "#num_ge">N1 &gt;= N2</A>, <A HREF = "#num_eq">N1 = N2</A>, <A HREF = "#num_le">N1 &lt;= N2</A>, <A HREF = "#num_lt">N1 &lt; N2</A>, and <A HREF = "#num_ne">N1 ~= N2</A>
</PRE>
<HR>
<H3><A NAME = "num_ge">
N1 &gt;= N2 : N2 -- compare numerically
</A></H3>

N1 &gt;= N2 produces N2 if N1 is numerically greater than or equal to
N2, but fails otherwise.
<PRE>
See also: <A HREF = "#num_gt">N1 &gt; N2</A>, <A HREF = "#num_eq">N1 = N2</A>, <A HREF = "#num_le">N1 &lt;= N2</A>, <A HREF = "#num_lt">N1 &lt; N2</A>, and <A HREF = "#num_ne">N1 ~= N2</A>
</PRE>
<HR>
<H3><A NAME = "num_eq">
N1 = N2 : N2 -- compare numerically
</A></H3>

N1 = N2 produces N2 if N1 is numerically equal to N2, but fails otherwise.
<PRE>
See also: <A HREF = "#num_gt">N1 &gt; N2</A>, <A HREF = "#num_ge">N1 &gt;= N2</A>, <A HREF = "#num_le">N1 &lt;= N2</A>, <A HREF = "#num_lt">N1 &lt; N2</A>, and <A HREF = "#num_ne">N1 ~= N2</A>
</PRE>
<HR>
<H3><A NAME = "num_le">
N1 &lt;= N2 : N2 -- compare numerically
</A></H3>

N1 &lt;= N2 produces N2 if N1 is numerically less than or equal to
N2, but fails otherwise.
<PRE>
See also: <A HREF = "#num_gt">N1 &gt; N2</A>, <A HREF = "#num_ge">N1 &gt;= N2</A>, <A HREF = "#num_eq">N1 = N2</A>, <A HREF = "#num_lt">N1 &lt; N2</A>, and <A HREF = "#num_ne">N1 ~= N2</A>
</PRE>
<HR>
<H3><A NAME = "num_lt">
N1 &lt; N2 : N2 -- compare numerically
</A></H3>

N1 &lt; N2 produces N2 if N1 is numerically less than N2, but fails otherwise.
<PRE>
See also: <A HREF = "#num_gt">N1 &gt; N2</A>, <A HREF = "#num_ge">N1 &gt;= N2</A>, <A HREF = "#num_eq">N1 = N2</A>, <A HREF = "#num_le">N1 &lt;= N2</A>, and <A HREF = "#num_ne">N1 ~= N2</A>
</PRE>
<HR>
<H3><A NAME = "num_ne">
N1 ~= N2 : N2 -- compare numerically
</A></H3>

N1 ~= N2 produces N2 if N1 is not numerically equal to N2, but fails otherwise.
<PRE>
See also: <A HREF = "#num_gt">N1 &gt; N2</A>, <A HREF = "#num_ge">N1 &gt;= N2</A>, <A HREF = "#num_eq">N1 = N2</A>, <A HREF = "#num_le">N1 &lt;= N2</A>, and <A HREF = "#num_lt">N1 &lt; N2</A>
</PRE>
<HR>
<H3><A NAME = "str_gt">
s1 &gt;&gt; s2 : s2 -- compare lexically
</A></H3>

s1 &gt;&gt; s2 produces s2 if s1 is lexically greater than s2, but fails otherwise.
<PRE>
See also: <A HREF = "#str_ge">s1 &gt;&gt;= s2</A>, <A HREF = "#str_eq">s1 == s2</A>, <A HREF = "#str_le">s1 &lt;&lt;= s2</A>, <A HREF = "#str_lt">s1 &lt;&lt; s2</A>, and <A HREF = "#str_ne">s1 ~== s2</A>
</PRE>
<HR>
<H3><A NAME = "str_ge">
s1 &gt;&gt;= s2 : s2 -- compare lexically
</A></H3>

s1 &gt;&gt;= s2 produces s2 if s1 is lexically greater than or equal to
s2, but fails otherwise.
<PRE>
See also: <A HREF = "#str_ge">s1 &gt;&gt; s2</A>, <A HREF = "#str_eq">s1 == s2</A>, <A HREF = "#str_le">s1 &lt;&lt;= s2</A>, <A HREF = "#str_lt">s1 &lt;&lt; s2</A>, and <A HREF = "#str_ne">s1 ~== s2</A>
</PRE>
<HR>
<H3><A NAME = "str_eq">
s1 == s2 : s2 -- compare lexically
</A></H3>

s1 == s2 produces s2 if s1 is lexically equal to s2, but fails otherwise.
<PRE>
See also: <A HREF = "#str_ge">s1 &gt;&gt; s2</A>, <A HREF = "#str_ge">s1 &gt;&gt;= s2</A>, <A HREF = "#str_le">s1 &lt;&lt;= s2</A>, <A HREF = "#str_lt">s1 &lt;&lt; s2</A>, and <A HREF = "#str_ne">s1 ~== s2</A>
</PRE>
<HR>
<H3><A NAME = "str_le">
s1 &lt;&lt;= s2 : s2 -- compare lexically
</A></H3>

s1 &lt;&lt;= s2 produces s2 if s1 is lexically less than or equal to
s2, but fails otherwise.
<PRE>
See also: <A HREF = "#str_ge">s1 &gt;&gt; s2</A>, <A HREF = "#str_ge">s1 &gt;&gt;= s2</A>, <A HREF = "#str_eq">s1 == s2</A>, <A HREF = "#str_lt">s1 &lt;&lt; s2</A>, and <A HREF = "#str_ne">s1 ~== s2</A>
</PRE>
<HR>
<H3><A NAME = "str_lt">
s1 &lt;&lt; s2 : s2 -- compare lexically
</A></H3>

s1 &lt;&lt; s2 produces s2 if s1 is lexically less than s2, but fails otherwise.
<PRE>
See also: <A HREF = "#str_ge">s1 &gt;&gt; s2</A>, <A HREF = "#str_ge">s1 &gt;&gt;= s2</A>, <A HREF = "#str_eq">s1 == s2</A>, <A HREF = "#str_le">s1 &lt;&lt;= s2</A>, and <A HREF = "#str_ne">s1 ~== s2</A>
</PRE>
<HR>
<H3><A NAME = "str_ne">
s1 ~== s2 : s2 -- compare lexically
</A></H3>

s1 ~== s2 produces s2 if s1 is not lexically equal to s2, but fails otherwise.
<PRE>
See also: <A HREF = "#str_ge">s1 &gt;&gt; s2</A>, <A HREF = "#str_ge">s1 &gt;&gt;= s2</A>, <A HREF = "#str_eq">s1 == s2</A>, <A HREF = "#str_le">s1 &lt;&lt;= s2</A>, and <A HREF = "#str_lt">s1 &lt;&lt; s2</A>
</PRE>
<HR>
<H3><A NAME = "val_eq">
s1 === s2 : s2 -- compare values
</A></H3>

x1 === x2 produces the value of x2 if x1 and x2 have the same value,
but fails otherwise.
<PRE>
See also: <A HREF = "#val_eq">x1 === x2</A>
</PRE>
<HR>
<H3><A NAME = "val_ne">
s1 === s2 : s2 -- compare values
</A></H3>

x1 === x2 produces the value of x2 if x1 and x2 do not have the same value,
but fails otherwise.
<PRE>
See also: <A HREF = "#val_ne">x1 ~=== x2</A>
</PRE>
</BODY></HTML>
