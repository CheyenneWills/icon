<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
    <TITLE>Icon Programming Language Functions (P - R)</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
    <LINK REL="SHORTCUT ICON" HREF="shortcut.gif">
</HEAD>
<BODY>
<H2>Details of Icon Functions P through R</H2>
<HR>
<H3><A NAME="pop"></A>pop (L) : x -- pop from list </H3>
Produces the leftmost element of L and removes it from L, but fails if L
is empty; synonym for get(L). 
<PRE>
See also: <A HREF="funcej.htm#get">get()</A>, <A HREF="#pull">pull()</A>, <A HREF="#push">push()</A>, and <A HREF="#put">put()</A></PRE>
<HR>
<H3><A NAME="pos"></A>pos (i1) : i2 -- test scanning position </H3>
Produces &amp;pos if &amp;pos = i1, but fails otherwise. 
<PRE>
See also: <A HREF="keywlist.htm#keywords">&amp;pos and &amp;subject</A></PRE>
<HR>
<H3><A NAME="proc"></A>proc (x,i) : p -- convert to procedure </H3>
Produces a procedure corresponding to the value of x, but fails if x does
not correspond to a procedure. If x is the string name of an operator, i
specifies the number of arguments: 1 for unary (prefix), 2 for binary (infix),
and 3 for ternary. proc(x,0) produces the built-in function named x even
if the global identifier having that name has been assigned another value.
proc(x,0) fails if x is not the name of a function. 
<PRE>
Default:
i       1

See also: <A HREF="funcad.htm#args">args()</A></PRE>
<HR>
<H3><A NAME="pull"></A>pull (L) : x -- pull from list </H3>
Produces the rightmost element of L and removes it from L, but fails if
L is empty. 
<PRE>
See also: <A HREF="funcej.htm#get">get()</A>, <A HREF="#pop">pop()</A>, <A HREF="#push">push()</A>, and <A HREF="#put">put()</A></PRE>
<HR>
<H3><A NAME="push"></A>push (L,x1,x2,...,xn) : L -- push onto list </H3>
Pushes x1, x2, ... onto the left end of L. Values are pushed in order from
left to right, so xn becomes the first (leftmost) value on L. push(L) with
no second argument pushes a null value onto L. 
<PRE>
See also: <A HREF="funcej.htm#get">get()</A>, <A HREF="#pop">pop()</A>, <A HREF="#pull">pull()</A>, and <A HREF="#put">put()</A></PRE>
<HR>
<H3><A NAME="put"></A>put (L,x1,x2,...,xn) : L -- put onto list </H3>
Puts x1, x2, ... onto the right end of L. Values are pushed in order from
left to right, so xn becomes the last (rightmost) value on L. put(L) with
no second argument puts a null value onto L. 
<PRE>
See also: <A HREF="funcej.htm#get">get()</A>, <A HREF="#pop">pop()</A>, <A HREF="#pull">pull()</A>, and <A HREF="#push">push()</A></PRE>
<HR>
<H3><A NAME="read"></A>read (f) : s -- read line </H3>
Produces the next line from f, but fails on end of file. 
<PRE>
Default:
f       &amp;input

See also: <A HREF="#reads">reads()</A></PRE>
<HR>
<H3><A NAME="reads"></A>reads (f,i) : s -- read string </H3>
Produces a string consisting of the next i characters from f, or the remaining
characters of f if fewer remain, but fails on an end of file. In reads(),
unlike read(), line termination sequences have no special significance.
reads() should be used for reading binary data. See also: <A HREF="#read">read()</A>
<PRE>
Defaults:
f       &amp;input
i       1</PRE>
<HR>
<H3><A NAME="real"></A>real (x) : r -- convert to real </H3>
Produces a real number resulting from type conversion of x, but fails if
the conversion is not possible. 
<PRE>
See also: <A HREF="funcej.htm#integer">integer()</A> and <A HREF="funcko.htm#numeric">numeric()</A></PRE>
<HR>
<H3><A NAME="remove"></A>remove (s) : n -- remove file </H3>
Removes (deletes) the file named s, but fails if s cannot be removed. 
<PRE>
See also: <A HREF="#rename">rename()</A></PRE>
<HR>
<H3><A NAME="rename"></A>rename (s1,s2) : n -- rename file </H3>
Renames the file named s1 to be s2, but fails if the renaming cannot be
done. 
<PRE>
See also: <A HREF="#remove">remove()</A></PRE>
<HR>
<H3><A NAME="repl"></A>repl (s1,i) : s2 -- replicate string </H3>
Produces a string consisting of i concatenations of s1. <HR>
<H3><A NAME="reverse"></A>reverse (s1) : s2 -- reverse string </H3>
Produces a string consisting of the reversal of s. <HR>
<H3><A NAME="right"></A>right (s1,i,s2) : s3 -- position string at right
</H3>
Produces a string of size i in which s1 is positioned at the right, with
s2 used for padding on the left as necessary. 
<PRE>
Defaults:
i       1
s2      &quot; &quot; (blank)

See also: <A HREF="funcad.htm#center">center()</A> and <A HREF="funcko.htm#left">left()</A></PRE>
<HR>
<H3><A NAME="rtod"></A>rtod (r1) : r2 -- convert radians to degrees </H3>
Produces the degree equivalent of r1 given in radians. 
<PRE>
See also: <A HREF="funcad.htm#dtor">dtor()</A></PRE>
<HR>
<H3><A NAME="runerr"></A>runerr (i,x) -- terminate with run-time error </H3>
Terminates program execution with error i and offending value x. 
<PRE>
Default:
x       no offending value</PRE>
</BODY>
</HTML>
