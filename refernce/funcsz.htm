<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
    <TITLE>Icon Programming Language Functions (S - Z)</TITLE>
    <LINK REL="STYLESHEET" TYPE="text/css" HREF="istyle.css">
    <LINK REL="SHORTCUT ICON" HREF="shortcut.gif">
</HEAD><BODY>
<H2>Details of Icon Functions S through Z</H2>
<HR>
<H3><A NAME = "save">
save (s) : i -- save executable image
</A></H3>

Saves an executable image of the current running program in the file
named s and produces the size of the file, but fails if the file cannot
be created.
<HR>
<H3><A NAME = "seek">
seek (f,i) : f -- seek to position in file
</A></H3>

Seeks to position i in f, but fails if the seek cannot be performed.
The first byte in the file is at position 1.  seek(f,0) seeks to the
end of file f.
<PRE>
See also: <A HREF = "#where">where()</A>
</PRE>
<HR>
<H3><A NAME = "seq">
seq (i1,i2) : i3,i4,...  -- generate sequence of integers
</A></H3>

Generates an endless sequence of integers starting at i1 with
increments of i2.

<PRE>
Defaults:
i1      1
i2      1

See also: <A HREF = "infix2.htm#to_by">i1 to i2 by i3</A>
</PRE>
<HR>
<H3><A NAME = "set">
set (L) : S  -- create set
</A></H3>

Produces a set whose members are the distinct values in the list L.

<PRE>
Default:
L       []
</PRE>
<HR>
<H3><A NAME = "sin">
sin (r1) : r2 -- compute sine
</A></H3>

Produces the sine of r1 given in radians.
<PRE>
See also: <A HREF = "funcad.htm#asin">asin()</A>
</PRE>
<HR>
<H3><A NAME = "sort">
sort (X,i) : L -- sort structure
</A></H3>

Produces a list containing values from X.  If X is a list, record, or
set, sort(X,i) produces the values of X in sorted order.  If X is a
table, sort(X,i) produces a list obtained by sorting the elements of X,
depending on the value of i.  For i = 1 or 2, the list elements are
two-element lists of key/value pairs.  For i = 3 or 4, the list elements
are alternating keys and values.  Sorting is by keys for i odd, by value
for i even.

<PRE>
Default:
i       1

See also: <A HREF = "#sortf">sortf()</A>
</PRE>
<HR>
<H3><A NAME = "sortf">
sortf (X,i) : L  -- sort list or set by field
</A></H3>

Produces a sorted list of the values in X.      Sorting is primarily by
type and in most respects is the same as with sort(X,i).  However,
among lists and among records, two structures are ordered by comparing
their ith fields.  i can be negative but not zero.      Two structures
having the equal ith fields are ordered as they would be in regular
sorting, but structures lacking an ith field appear before structures
having them.

<PRE>
Default:
i       1

See also: <A HREF = "#sort">sort()</A>
</PRE>
<HR>
<H3><A NAME = "sqrt">
sqrt (r1) : r2 -- compute square root
</A></H3>

Produces the square root of r1.
<PRE>
See also: <A HREF = "infix1.htm#exponential">N1 ^ N2()</A>
</PRE>
<HR>
<H3><A NAME = "stop">
stop (x1,x2,...,xn)  -- stop execution
</A></H3>

Terminates program execution with an error status after writing strings
x1,x2,...,xn.  If xi is a file, subsequent output is to xi.  Initial
output is to standard error output.

<PRE>
Default:
xi      &quot;&quot; (empty string)

See also: <A HREF = "funcej.htm#exit">exit()</A> and <A HREF = "#write">write()</A>
</PRE>
<HR>
<H3><A NAME = "string">
string (x) : s -- convert to string
</A></H3>

Produces a string resulting from converting x, but fails if the
conversion is not possible.
<HR>
<H3><A NAME = "system">
system (s) : i -- call system function
</A></H3>

Calls the C library function <VAR>system()</VAR> to execute s and produces the
resulting integer exit status.
<HR>
<H3><A NAME = "tab">
tab (i) : s  -- set scanning position
</A></H3>

Produces &amp;subject[&amp;pos:i] and assigns i to &amp;pos, but fails if i is out
of range.  It reverses assignment to &amp;pos if resumed.
<PRE>
See also: <A HREF = "funcko.htm#move">move()</A>
</PRE>
<HR>
<H3><A NAME = "table">
table (x) : T -- create table
</A></H3>

Produces a table with a default value x.

<PRE>
Default:
x       &amp;null
</PRE>
<HR>
<H3><A NAME = "tan">
tan (r1) : r2 -- compute tangent
</A></H3>

Produces the tangent of r1 given in radians.
<PRE>
See also: <A HREF = "funcad.htm#atan">atan()</A>
</PRE>
<HR>
<H3><A NAME = "trim">
trim (s1,c) : s2 -- trim string
</A></H3>

Produces a string consisting of the characters of s1 up to the trailing
characters contained in c.

<PRE>
Default:
c       ' ' (blank)
</PRE>
<HR>
<H3><A NAME = "type">
type (x) : s -- produce type name
</A></H3>

Produces a string corresponding to the type of x.
<HR>
<H3><A NAME = "upto">
upto (c,s,i1,i2) : i3,i4,...,in  -- locate characters
</A></H3>

Generates the sequence of integer positions in s preceding a character
of c in s[i1:i2].  It fails if there is no such position.

<PRE>
Defaults:
s       &amp;subject
i1      &amp;pos if s defaulted, otherwise 1
i2      0

See also: <A HREF = "funcad.htm#bal">bal()</A> and <A HREF = "funcej.htm#find">find()</A>
</PRE>
<HR>
<H3><A NAME = "variable">
variable (s) : x -- produce variable
</A></H3>

Produces the variable for the identifier or keyword named s, but fails
if there is no such variable.  Local identifiers override global
identifiers.
<PRE>
See also: <A HREF = "funcko.htm#name">name()</A>
</PRE>
<HR>
<H3><A NAME = "where">
where (f) : i -- produce position in file
</A></H3>

Produces the current byte position in f.  The first byte in the file is
at position 1.
<PRE>
See also: <A HREF = "#seek">seek()</A>
</PRE>
<HR>
<H3><A NAME = "write">
write (x1,x2,...,xn) : xn -- write line
</A></H3>

Writes strings x1,x2,...,xn with a line termination sequence added at
the end.  If xi is a file, subsequent output is to xi.  Initial output
is to standard output.

<PRE>
Default:
xi      &quot;&quot; (empty string)

See also: <A HREF = "#writes">writes()</A>
</PRE>
<HR>
<H3><A NAME = "writes">
writes (x1,x2,...,xn) -- write string
</A></H3>

Writes strings x1,x2,...,xn without a line termination sequence added
at the end.  If xi is a file, subsequent output is to xi.  Initial
output is to standard output.

<PRE>
Default:
xi      &quot;&quot; (empty string)

See also: <A HREF = "#write">write()</A>
</PRE>
</BODY></HTML>
